#!/usr/bin/env bash

export ROOT=~/Services

Down() {
	trap "$1" EXIT
}

Wait() {
	sleep infinity
}

Loop() {
	(while true; do "$1"; sleep $2; done) &
}

_init() {
	export NAME="${@: -1}"
}
_start() {
	_init $@


	if [ "$#" -eq 0 ]; then
		${FUNCNAME[0]} --enabled
	fi

	if [[ "$1" =~ "--" ]]; then
		for d in $(service list "$1"); do 
			${FUNCNAME[0]} $d
		done
		return
	fi


	if [[ $(_status $NAME | grep "does not exist") != "" ]]; then
		echo "Service $NAME does not exist"
		return 
	fi

	cd $ROOT/$NAME

	if [ $(_status $NAME | grep "Started") ]; then
		echo "Service $NAME has already been started"
		return
	fi
	
	export -f Down
	export -f Wait
	export -f Loop
	
	cd data
	if [ $(_status $NAME | grep "Disabled") ]; then

		setsid -f bash -c 'trap "rm -f /tmp/$NAME.log; kill -- -$$" EXIT; bash $ROOT/$NAME/.service' > /tmp/$NAME.log 2>&1 &
		touch /tmp/$NAME.log

		sleep 5

	else

		setsid -f bash -c 'trap "rm -f /tmp/$NAME.log; kill -- -$$" EXIT; bash $ROOT/$NAME/service' > /tmp/$NAME.log 2>&1 &
		touch /tmp/$NAME.log

		sleep 5
	fi
}

_stop() {
	_init $@

	if [ "$#" -eq 0 ]; then
		${FUNCNAME[0]} --enabled
	fi

	if [[ "$1" =~ "--" ]]; then
		for d in $(service list "$1"); do 
			${FUNCNAME[0]} $d
		done
		return
	fi
	
	if [[ $(_status $NAME | grep "does not exist") != "" ]]; then
		echo "Service $NAME does not exist"
		return 
	fi

	
	PID=$(pgrep -f "^bash $ROOT/$NAME/service$")

	if [ -z "${PID}" ]; then
		PID=$(pgrep -f "^bash $ROOT/$NAME/.service$")

		if [ -z "${PID}" ]; then
			echo "Service $NAME is not running"
			return 
		fi
	fi
	for proc in $PID; do
		kill $proc  > /dev/null 2>&1
	done
	sleep 5

}

_log() {
	_init $@
	EDITOR=$EDITOR less +G +F -f /tmp/$NAME.log
}

_status() {
	
	_init $@
	if [ ! -f "$ROOT/$NAME/service" ] && [ ! -f "$ROOT/$NAME/.service" ]; then
		echo "Service $NAME does not exist"
		return 
	fi

	if [ -f "/tmp/$NAME.log" ]; then
    	echo "Started"
	else 
    	echo "Stopped"
    fi

    if [ -f "$ROOT/$NAME/service" ]; then
    	echo "Enabled"
	else 
    	echo "Disabled"
    fi
}

_disable() {
	_init $@

	if [ "$#" -eq 0 ]; then
		${FUNCNAME[0]} --enabled
	fi

	if [[ "$1" =~ "--" ]]; then
		for d in $(service list "$1"); do 
			${FUNCNAME[0]} $d
		done
		return
	fi

	if [[ $(_status $NAME | grep "does not exist") != "" ]]; then
		echo "Service $NAME does not exist"
		return 
	fi

	if [[ $(_status $NAME | grep "Disabled") != "" ]]; then
		echo "Service $NAME is already disabled"
		return 
	fi

	
	mv $ROOT/$NAME/service $ROOT/$NAME/.service

	if [ "$1" == "--now" ]; then
		_stop $NAME
	fi
}

_enable() {
	_init $@


	if [ "$#" -eq 0 ]; then
		${FUNCNAME[0]} --enabled
	fi

	if [[ "$1" =~ "--" ]]; then
		for d in $(service list "$1"); do 
			${FUNCNAME[0]} $d
		done
		return
	fi

	if [[ $(_status $NAME | grep "does not exist") != "" ]]; then
		echo "Service $NAME does not exist"
		return 
	fi

	if [ $(_status $NAME | grep "Enabled") ]; then
		echo "Service $NAME is already enabled"
		return 
	fi

	mv $ROOT/$NAME/.service $ROOT/$NAME/service

	if [ "$1" == "--now" ]; then
		service start $NAME
	fi
}

_list() {
	_init $@
	if [ "$1" == "--all" ]; then
	
		(cd $ROOT && for d in $(ls -d *); do echo $d; done)
		
	elif [ "$1" == "--enabled" ]; then
		(cd $ROOT
			for d in $(ls -d *); do
				if [ $(_status $d | grep "Enabled") ]; then
					echo $d
				fi
			done)
	elif [ "$1" == "--running" ]; then
		for d in /tmp/*.log; do
		
			d=$(echo ${d##/tmp/})
			d=$(echo ${d%%.log})

			if [ -d $ROOT/$d ]; then
				echo $d
			fi
		done
	fi
}

_edit() {
	_init $@
	if [[ $(_status $NAME | grep "does not exist") != "" ]]; then
		echo "Service $NAME does not exist"
		return 
	fi

	if [ $(_status $NAME | grep "Disabled") ]; then

		$EDITOR $ROOT/$NAME/.service
	else
		$EDITOR $ROOT/$NAME/service
	fi
}

_restart() {
	_init $@

	_stop "$@"
	_start "$@"
}

_new() {
	_init $@
	mkdir $ROOT/$NAME
	touch $ROOT/$NAME/data
	mkdir $ROOT/$NAME/.service
}

if [[ $(type -t _"$1") == "function" ]]; then
	 _"$1" "${@:2}"
else
	echo "Command $1 doesn't exist"
fi